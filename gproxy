#!/bin/sh
# /etc/init.d/gproxy
### BEGIN INIT INFO
# Provides:          gproxy
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start gproxy at boot time
# Description:       Gunbot Community Proxy {start|stop|status|restart} init.d script.
### END INIT INFO

# EDIT THESE VARIABLES IF NEEDED
GPROXY_PATH=/opt/gunbot
GPROXY_JAR=GunbotProxy.jar

# You can use this script to start and stop the Gunbot Community Proxy
# If you would like the proxy to start and stop automatically when rebooting
# place this file in the /etc/init.d folder and execute the command update-rc.d 

SERVICE_NAME=GunbotProxy
PID_PATH_NAME=/tmp/GunbotProxy-pid

status() {
        if [ -f $PID_PATH_NAME ]; then
            printf "$SERVICE_NAME looks like it's running "
        else
            printf "$SERVICE_NAME looks like it's not running "
        fi
        if ps ax | grep -v grep | grep $GPROXY_JAR > /dev/null; then
            [ -f $PID_PATH_NAME ] && printf "and" || printf "but"
            echo " it is in the list of processes."
        else
            [ -f $PID_PATH_NAME ] && printf "but" || printf "and"
            echo " its not in the list of processes.
            [ -f $PID_PATH_NAME ] || {echo "Steps to resolve:"; echo "#1 Make sure the proxy works when manually started."; echo "#2 Check that the Path and Jar variables in this script match your configuration."; rm $PID_PATH_NAME}
        fi
}


case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            cd $GPROXY_PATH
            nohup java -Xmx256m -jar $GPROXY_JAR /tmp 2>> /dev/null >> /dev/null &
            echo $! > $PID_PATH_NAME
            status
        else
            status
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping ..."
            kill $PID;
            rm $PID_PATH_NAME
            sleep 3
            proxy_status
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    status)
        status
    ;;
    restart)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping ...";
            kill $PID;
            rm $PID_PATH_NAME
            sleep 3
            echo "$SERVICE_NAME starting ..."
            nohup java -Xmx256m -jar $GPROXY_JAR /tmp 2>> /dev/null >> /dev/null &
            echo $! > $PID_PATH_NAME
            status
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    *)
        echo "Usage: gproxy {start|stop|status|restart}"
        exit 1
    ;;
esac
